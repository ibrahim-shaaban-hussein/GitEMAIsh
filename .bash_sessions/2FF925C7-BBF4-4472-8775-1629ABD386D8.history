gcc  Types1.cpp -i Types1
gcc  Types1.cpp -o Types1
vi Types1.cpp
gcc  Types1.cpp -o Types1
vi Types1.cpp
pwd
ls -ltr
gcc Types1.cpp -o Types1
clear
gcc Types1.cpp -o Types1
gcc Types1.cpp 
gcc -v Types1.cpp 
vi Types1.py
python3  Types1.py
vi Types1.py
vi Types1.py
python3  Types1.py
vi Types1.py
python3  Types1.py
vi Types1.py
vi Types2.cpp
gcc Types2.cpp -o Types2
vi Types2.cpp
clear
gcc Types2.cpp -o Types2
vi check1.cpp
gcc check1.cpp -o check1
g++ check1.cpp -o check1
g++ Types2.cpp -o Types2
./type2
./Ttype2
./Type2
./Types2 
./Types2
vi Types2.cpp 
pwd
ls -ltr
g++ Types2.cpp -o Types2
./Types2 
vi ./Types2 
vi ./Types2.cpp
g++ Types2.cpp -o Types2
vi ./Types2.cpp
g++ Types2.cpp -o Types2
./Types2 
vi Types.py
python Types.py
python Types.py
vi Types.py
python Types.py
vi Types.py
python Types.py
vi Types.py
python Types.py
vi Types.py
python Types.py
vi Types.py
ls -ltr
more Types2.cpp 
for ((i =1; i<=99; i+=1)); do echo $i; done
for ((i =1; i<=99)); do echo $i; done
for ((i =1; i<=99; i+=1)); do echo $i; done
for i in  $(seq 1 .. 99); do echo $i; done
for ((i =1; i<=99; i++)); do echo $i; done
for ((i=1; i<=50)); do echo $i;done
for ((i=1; i<=50;i++)); do echo $i;done
vi Math.sh
./Math.sh
chmod +x ./Math.sh
./Math.sh
more Math.sh 
vi YN.sh
 chmod +x YN.sh
./YN.sh 
./YN.sh 
more ./YN.sh 
vi triangle.sh
chmod +x triangle.sh
./tr
./triangle.sh 
./triangle.sh 
./triangle.sh 
 read line;
vi math2.sh
vi math2.sh
chmod +x math2.sh
./math2.sh 
-105+50*3/20 + (19^2)/7
./math2.sh 
(-105.5*7+50*3)/20 + (19^2)/7
echo "scale=4;1/16" | bc
echo "scale=3;1/16" | bc
vi txt1.txt
echo "scale=3;1/16" | bc
cut -d $'\t' -f1-3  txt1.txt
vi txt1.txt
cut -d $'\t' -f1-3  txt1.txt
cut -d $'\t' -f1-2  txt1.txt
cut -d $'\t' -f1-4  txt1.txt
clear
cut -d $'\t' -f1-3  txt1.txt
cut -d $'\t' -f1-3  
vi txt1.txt
vi txt2.txt
cut -d $'\t' -f1-3  txt2.txt 
cut -d $'\t' -f1-3  txt2.txt 
cut -d $'\t' -f1-3  <txt2.txt 
cut -d $'\t' -f1-3  < txt2.txt 
cut -d $'\t'   < txt2.txt 
cut -d $'\t' -f1-2  < txt2.txt 
cut -d $'\t' -f2-3  < txt2.txt 
cut -d$'\t' -f2- txt2.txt 
cut -d$'\t' -f2-4 txt2.txt 
cut -d$'\t' -f2-3 txt2.txt 
cut -f1-3   txt2.txt 
'cut -d$'\t' -f2-3 txt2.txt 
'
cut -d$'\t' -f3-4 txt2.txt 
vi txt3.txt
cut -c13-  txt3.txt
more txt3.txt 
vi txt4.txt
cut -d ' ' -f4 txt4.txt 
echo "scale=4;5/16" | bc
vi scale.sh
grep scale *
vi compareTriplets.py
pwd
python3 compareTriplets.py 
vi compareTriplets.py 
vi compareTriplets.py 
python3 compareTriplets.py 
python3 compareTriplets.py 
vi compareTriplets.java
javac  compareTriplets.java
vi compareTriplets.java
javac  compareTriplets.java
vi compareTriplets.java
mv compareTriplets.java SolutionCompareTriplets
mv SolutionCompareTriplets SolutionCompareTriplets.java
javac SolutionCompareTriplets.java 
vi compareTriplets.java
vi SolutionCompareTriplets.java 
javac SolutionCompareTriplets.java 
java SolutionCompareTriplets
ls -ltr
java SolutionCompareTriplets
java SolutionCompareTriplets
java SolutionCompareTriplets
vi AVeryBigSum.py
vi AVeryBigSum.py
python3  AVeryBigSum.py
python3  AVeryBigSum.py
vi AVeryBigSum.cpp
g++  AVeryBigSum.cpp -o AVeryBigSum
./AVeryBigSum 
vi AVeryBigSum.java
javac AVeryBigSum.java
mv AVeryBigSum.java  SolutionAVeryBigSum.java
vi SolutionAVeryBigSum.java 
javac AVeryBigSum.java
mv  SolutionAVeryBigSum.java 
javac  SolutionAVeryBigSum.java 
vi   SolutionAVeryBigSum.java 
javac  SolutionAVeryBigSum.java 
java SolutionAVeryBigSum
ls -ltr
more AVeryBigSum.py 
more compareTriplets.py
ls -ltr aVeryBigSum.py
more  aVeryBigSum.py
vi AVeryBigSum.py
ls -ltr  *VeryBigSum.py
vi aVeryBigSum.py
vi AVeryBigSum1.py
python3 AVeryBigSum1.py
vi  AVeryBigSum1.py
ls -ltr
pwd
pwd
python3 AVeryBigSum1.py
python3 AVeryBigSum1.py
OUTPUT_PATH='./myfile'
python3 AVeryBigSum1.py
OUTPUT_PATH='./myfile'
ls -ltr
OUTPUT_PATH='./myfile.txt'
pwd
OUTPUT_PATH='/Users/ibrahims.hussein/hackerrank/java/myfile.txt'
python3 AVeryBigSum1.py
export OUTPUT_PATH='/Users/ibrahims.hussein/hackerrank/java/myfile.txt'
python3 AVeryBigSum1.py
python3 AVeryBigSum1.py
python3 AVeryBigSum1.py
python3 AVeryBigSum1.py
vi DiagonalDifference.py
python3 DiagonalDifference.py
vi grid1.py
python3  grid1.py
vi grid1.py
python3  grid1.py
vi grid1.py
python3  grid1.py
vi grid1.py
python3  grid1.py
vi grid1.py
python3  grid1.py
vi grid1.py
python3  grid1.py
vi grid1.py
vi grid2.py
python3  grid2.py
vi grid2.py
more grid2.py 
more  grid1.py
ls ltr DiagonalDifference.py 
ls -ltr DiagonalDifference.py 
python3  DiagonalDifference.py 
python3  DiagonalDifference.py 
python3  DiagonalDifference.py 
python3  DiagonalDifference.py 
python3  DiagonalDifference.py 
python3  DiagonalDifference.py 
python3  DiagonalDifference.py 
python3  DiagonalDifference.py 
python3  DiagonalDifference.py 
python3  DiagonalDifference.py 
python3  DiagonalDifference.py 
python3  DiagonalDifference.py 
python3  DiagonalDifference.py 
python3  DiagonalDifference.py 
python3  DiagonalDifference.py 
python3  DiagonalDifference.py 
vi arr1.py
python3 arr1.py 
vi arr1.py
python3 arr1.py 
vi arr1.py
python3 arr1.py 
vi arr1.py
python3 arr1.py 
vi arr1.py
python3 arr1.py 
vi arr1.py
python3 arr1.py 
vi arr1.py
python3 arr1.py 
python3 arr1.py 
pwd
ls -ltr
python3 arr1.py 
vi arr1.py 
python3 arr1.py 
vi arr1.py 
python3 arr1.py 
vi arr1.py 
python3 arr1.py 
vi arr1.py 
grep  input *
vi arr1.py 
python3 arr1.py 
python3 arr1.py 
vi arr1.py 
python3 arr1.py 
vi arr1.py 
vi aar2d.py
python3 aar2d.py
vi aar2d.py
python3 aar2d.py
python3 aar2d.py
python3 aar2d.py
python3 aar2d.py
vi mat1.py
python3 mat1.py
vi mat1.py
python3 mat1.py
vi mat1.py
python3 mat1.py
vi mat1.py
python3 mat1.py
vi mat1.py
python3 mat1.py
vi mat1.py
python3 mat1.py
vi mat1.py
vi arr2d2.py
python3  arr2d2.py
vi arr2d3.py
python3  arr2d3.py
vi arr2d3.py
python3  arr2d3.py
vi arr2d3.py
python3  arr2d3.py
vi arr2d3.py
vi arr2d3.py
python3  arr2d3.py
vi arr2d3.py
python3  arr2d3.py
vi arr2d3.py
python3  arr2d3.py
vi arr2d3.py
vi arr2dN.py
python3 arr2dN.py
python3 arr2dN.py
vi arr2d3.py
python3 arr2d3.py
vi arr2d3.py
python3 arr2d3.py
python3 arr2d3.py
python3 arr2d3.py
mv arr2d3.py arr2diminsion.py
vi arr2diminsion.py 
cut -d ' ' -f1-3 
vi txt8.txt
cut -d ' ' -f1-3 txt8.txt 
cut -d ' ' -f2- txt8.txt 
first20l.sh
vi first20l.sh
vi tr1.sh
vi num1.txt
sort -n -r num1.txt
vi temp1.txt
sort -n -k2 -r -t $'\t' temp1.txt
sort -n -k2 -r -t $'\t' temp1.txt
vi uniq1.txt
uniq -c  uniq1.txt
uniq   uniq1.txt
pwd
cd 
pwd
cd hackerrank/
ls -ltr findN*
find . -name Find*
find . -name "find*"
ls -ltr find*
ls -ltr *.py
ls -ltr | more
cd tmp
ls -ltr
cd ..
pwd
dc 
cd 
cd Documents/
ls -ltr
cd hackerrank/
ls -ltr
ls -ltr *.py
find . -name "*.py"
find . -name "*.py" -print
cd java/
ls -ltr
cd
pwd
cd
cd hackerrank/
find . -name "*.py"
find . -name "*.py" | grep -i find
find . -name "*.py" | grep -i number
vi findNum.py
python findNum.py
python3 findNum.py
vi  findNum.py
grep split *
grep findNymber  *
grep -i findNymber  *
grep -i findNumber  *
grep -i findNumber  */*
grep -i findN  */*
grep -i find  */*
pw
pwd
grep -i Find  */*
vi findNumber.cpp
git --version
clear
cd
pwd
mkdir dev-bash
cd dev-bash/
x=4
echo $x
echo "$x"
echo "${x}"
echo "${}"
echo "${y}"
echo $PS1
PS1="\W => $ "
PS1="\PWD => $ "
PS1="PWD => $ "
PS1="$PWD => $ "
PS1=[\@ ==> \u@\h \w]
PS1=[\ ==> \u\h \w]
PS1=[\ ==> \u\h \w]
PS1=[\ ==> \u\h]
PS1=[\T ==> \u\h \w]
PS1=[\t ==> \u\h \w]
PS1=[\Te ==> \u\h]
PS1=[\T@ ==> \u\h]
PS1=[\Te ==> \u\h]
PS1=[\T ==> \u\h]
PS1="[\T ==> \u\h]"
PS1="[\T@ ==> \u\h]"
PS1="[\T@ ==> \u\h\e]"
echpo $PS1
echo $PS1
brew install git
sh get_git_versions.sh
get_git_versions.sh
which bash
vi get_git_versions.sh
chmod +x get_git_versions.sh
./get_git_versions.sh 
vi get_git_versions.sh
./get_git_versions.sh 
vi get_git_versions.sh
man if
vi get_git_versions.sh
./get_git_versions.sh 
vi get_git_versions.sh
./get_git_versions.sh 
vi get_git_versions.sh
./get_git_versions.sh 
vi get_git_versions.sh
vi get_git_versions.sh
./get_git_versions.sh 
vi get_git_versions.sh
./get_git_versions.sh 
vi get_git_versions.sh
./get_git_versions.sh 
vi get_git_versions.sh
./get_git_versions.sh 
vi get_git_versions.sh
./get_git_versions.sh 
vi get_git_versions.sh
./get_git_versions.sh 
vi get_git_versions.sh
./get_git_versions.sh 
vi get_git_versions.sh
vi get_git_versions.sh
clear
sh get_git_versions.sh
grep --color=auto error *.txt
export GRE
_OP
export GRE_OPTIONS= --color=auto
export GREP_OPTIONS= --color=auto
export GREP_OPTIONS='--color=auto'
grep error *.txt
grep -i error *.txt | awk {'print $12'}
ifconfig 
ifconfig  -a
clear
ifconfig  -a | more
ping 192.168.100.16
ping -c 1 192.168.100.16| grep 'bytes from' 
ping -c 1 192.168.100.16| grep 'bytes from' | cut -d = -f 4
echo $machine_type
echo $MACHINE_TYPE
ECHO $0
echo $0
./get_git_versions.sh 
echo $0
ping -c 1 192.168.100.16| grep 'bytes from' 
vi 3.sh
chmod +x  3.sh
./3.sh 
echo $0
vi 3.sh
echo $0
./3.sh 
export  PS1=“< $LOGNAME@`hostname`:\$PWD > “
export  PS1=“< $LOGNAME@`hostname`:\$PWD > “
export  PS1="< $LOGNAME@'hostname':\$PWD > "
export  PS1="< $LOGNAME@'hostname':\$PWD > "
echo $hostname
echo $HOSTNAME
export  PS1="< $LOGNAME@'HOSTNAME':\$PWD > "
export  PS1="< $LOGNAME@'$hostname':\$PWD > "
export  PS1="< $LOGNAME@'$hostname':\$PWD > "
echo $hostname
export  PS1="< $LOGNAME@'$hostname':\$PWD > "
echo $HOSTNAME
export  PS1="< $LOGNAME@'$HOSTNAME':\$PWD > "
export  PS1="\$PWD:  > "
export  PS1="\$PWD: > "
export  PS1="\$PWD$ > "
export  PS1="\$ > "
clear
export  PS1="< $LOGNAME@'$HOSTNAME':\$PWD\n > "
export  PS1="< $LOGNAME@'$HOSTNAME':\$PWD\n> "
clear
export  PS1="< $LOGNAME@'$HOSTNAME':\$PWD\n$ "
clear
export  PS1="< $LOGNAME@'$HOSTNAME':\$PWD\n$ "
export  PS1="< $LOGNAME@'\$PWD\n$ "
export  PS1="\$PWD\n$ "
clear
export  PS1="\$PWD\n$ "
vi .bash_profile
vi StackDemo.java
vi StackDemo.java
javac StackDemo.java 
java StackDemo
mv  StackDemo.java StackDemoPop.jav 
mv  StackDemo.java StackDemoPop.java
mv StackDemoPop.jav StackDemoPop.java 
vi StackDemoPop.java 
javac  StackDemoPop.java 
java StackDemoPop
vi StackDemoPush.java
javac StackDemoPush.java
java StackDemoPush
java StackDemoPop
java StackDemoPop
javac StackDemoPush
vi  StackDemoPush
vi  StackDemoPush.java 
cp  StackDemoPush.java  StackDemoPop1.java
vi  StackDemoPop1.java
javac StackDemoPop1.java
java StackDemoPop1
ls -ltr
vi StackDemoPush.java
mv StackDemoPush.java StackDemoPop.java
javac StackDemoPop.java
vi StackDemoPop.java
javac StackDemoPop.java
java StackDemoPop
vi StackDemoPop.java
javac StackDemoPop.java
vi StackDemoPop.java
javac StackDemoPop.java
java StackDemoPop
java StackDemovi // Java code to demonstrate search() method
import java.util.*;
public class Stack_Demo {
public static void main(String[] args)
{ g an empty Stack; g> STACK = new Stack<String>(); g strings; g the Stack; tln("The stack is: " + STACK);
g for the element "4"
tln("Does the stack contains '4'? "
g for the element "Hello"
tln("Does the stack contains 'Hello'? "
g for the element "Geeks"
tln("Does the stack contains 'Geeks'? "
// Java code to demonstrate search() method
import java.util.*;
public class Stack_Demo {
public static void main(String[] args)
{ g an empty Stack; g> STACK = new Stack<String>(); g strings; g the Stack; tln("The stack is: " + STACK);
g for the element "4"
tln("Does the stack contains '4'? "
g for the element "Hello"
tln("Does the stack contains 'Hello'? "
g for the element "Geeks"
tln("Does the stack contains 'Geeks'? "
vi 1
mv 1 Stack_Demo.java
vi Stack_Demo.java 
javac  Stack_Demo.java 
java Stack_Demo
vi StackDemoRemove.java
javac StackDemoRemove.java
vi StackDemoRemove.java
javac StackDemoRemove.java
java StackDemoRemove
clear
java StackDemoRemove
vi Solution.py
python3  Solution.py
python3  Solution.py
vi Solution.cpp
gcc  Solution.cpp -o Sol
g++  Solution.cpp -o Sol
chmod 755 Sol
./Sol 
vi Solution.cpp
g++  Solution.cpp -o Sol
vi Solution.cpp
g++  Solution.cpp -o Sol
vi Solution.cpp
g++  Solution.cpp -o Sol
./Sol
vi Solution.cpp
./Sol
vi Solution.cpp
gcc Solution.cpp -o Sol
g++ Solution.cpp -o Sol
.\Sol
./Sol 
vi Solution.cpp
ls -ltr
vi palindrome.cpp
vi Solution.cpp
vi palindrome.cpp
g++ Solution.cpp -o Sol
./Sol
./Sol
vi palindrome.cpp
g++ Solution.cpp -o Sol
./Sol
clear
./Sol
vi palindrome.cpp
g++ Solution.cpp -o Sol
vi palindrome.cpp
./Sol
./Sol
vi palindrome.cpp
g++ Solution.cpp -o Sol
./Sol
vi palindrome.cpp
g++ Solution.cpp -o Sol
./Sol
vi palindrome.cpp
g++ Solution.cpp -o Sol
./Sol
cleqar
clear
./Sol
more Solution.cpp
vi Solution.cpp
g++ Solution.cpp -o Sol
./sol
./Sol
vi Solution.cpp
g++ Solution.cpp -o Sol
./Sol 
clear
./Sol 
vi Solution.cpp 
g++ Solution.cpp -o Sol
vi Solution.cpp 
g++ Solution.cpp -o Sol
vi Solution.cpp 
g++ Solution.cpp -o Sol
vi Solution.cpp 
g++ Solution.cpp -o Sol
vi Solution.cpp 
g++ Solution.cpp -o Sol
vi Solution.cpp 
g++ Solution.cpp -o Sol
clear
vi Solution.cpp 
g++ Solution.cpp -o Sol
vi Solution.cpp 
vi VarAttr.sh
vi VarAttr.sh
chmod +x VarAttr.sh
./VarAttr.sh 
vi VarAttr.sh
clear
./VarAttr.sh 
vi VarAttr.sh
man declare
man declare
man var
man bash
vi VarAttr.sh
ehich bash
which bash
vi VarAttr.sh
vi VarAttr.sh
bash --version
vi VarAttr.sh
./VarAttr.sh
./VarAttr.sh 2>>&1
./VarAttr.sh 2>>&
./VarAttr.sh 2>>1
clear
./VarAttr.sh 2>>1
ls -ltr
more 1
./VarAttr.sh 2>&1
ls -ltr
more 1
echo $
echo $SECONDS
bc 58244 / 60
bc ((58244 / 60))
echo $(bc((58244 / 60)))
bc
f=$((1/3))
f=$((1/3)); echo $f
f=$((1/3)); echo $f; g=$(echo 1/3 | bc -l); eho g
f=$((1/3)); echo $f; g=$(echo 1/3 | bc -l); eho $g
f=$((1/3)); echo $f; g=$(echo 1/3 | bc -l); echo $g
[[ "cat" == "cat" ]]; echo $?; [[ "cat" = "dog" ]]; echo $?
vi 5.sh
chmod 755 5.sh
c./5.sh
./5.sh
vi 5.sh
./5.sh
vi 5.sh
clear
./5.sh
vi 5.sh
./5.sh
vi 6.sh
vi 6.sh
clear
chmod +x 6.sh
./6.
./6.sh 
a="Hello"
b="World"
c=$a$b
echo $c
echo ${#a}
echo ${#c}
d=${c:3}
echo $d
${c:3:4}
e=${c:3:4}
echo $e
 echo ${c: -4}
echo $c
clear
echo $c
vi ~/.bash_profile
